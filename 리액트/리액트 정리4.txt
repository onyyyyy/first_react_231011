231023
현재의 파일을 기록하고 저장하고 싶을때
git add + 파일명 (무대, 스테이징) -> git commit -m "기록하고 싶은 메모" (기록) -> git push (github 업로드) 

*git 명령어

0. 유저 등록
git config --global user.name "깃허브 닉네임"
git config --global user.email "깃허브 이메일"

--->딱한번 깃허브 설치하고 한번만 하면됨

1.초기화
git init . => 깃허브 초기화

2.스테이지
git add . => 현 시점 기준 전부 스테이징에 올림

3.기록
git commit -m "입력하고 싶은 메세지 입력"

4.저장소 생성
깃허브에 가서 저장소 생성하기
저장소명, 내용(옵션사항), public(공용)

5.저장소 url 주소복사
=>vscode 터미널에서 
git remote add origin 저장소 주소복사


6.저장소 업로드
=>git push origin master(또는 main)

npm 설치시 @latest => 최신버전

231026
*Router
npm i react-router-dom

연습은 브라우저browser 라우터
실전은 해시hash 라우터

<Route path="" element={<이동할 경로 이름/>}/> => path 길, 경로
"/" 메인경로 => index.html 생략(naver.com/index.html)
"경로이름"
브라우저 라우터 이동경로
http://localhost:3000/sub02

<Route path="/*" /> =>page not found
/* => 내가 설정한 경로를 제외하고

해시라우터 이동 경로 
이동 경로 사이에 # 붙혀서 이동
http://localhost:3000/#/sub02


http status (code) => 에러코드 확인
https://namu.wiki/w/HTTP/%EC%9D%91%EB%8B%B5%20%EC%BD%94%EB%93%9C
404에러

리액트에선 a태그 말고 <Link> 컴포넌트 이용
<Link to={"/"}>LOGO</Link>

// *Router
// => 경로 설정
// ex)
// <BrowserRouter>(라우터 설정, 브라우저 라우터, 해시 라우터가 있음)
//     <Routes>(라우터 부모)
//         <Route path="/" element={메인 컴포넌트} />
//         <Route path="경로1" element={컴포넌트1} />
//         <Route path="경로2" element={컴포넌트2} />
//         <Route path="/*" element={404 에러 페이지 컴포넌트} />
//     </Routes>
// </BrowserRouter>

// => 링크를 이용할 땐 a 태그가 아닌 Link 컴포넌트를 사용함
// ex)
// <Link to={"경로"}></Link>

npm i react-helmet
=> 페이지 타이틀 변경
    <Helmet>
      <title>{name}</title>
    </Helmet>

    Helmet 컴포넌트를 따로 빼서 값을 변수로 설정해 
    각 페이지에 넣을 수 있음

    ex)
    export const PageTitle = ({ 변수명 }) => {
    return (
            <Helmet>
                <title>{변수명}</title>
            </Helmet>
        );
    };

    ? = 쿼리문 (요청문)



